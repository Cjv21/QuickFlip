===============================================================================

			Tasks

===============================================================================

	X community map 
	X community home page
	o confirm email
	X buy index
	o sell index
	o advanced search
	X make post
	o tags
	X make offer auction
	o make offer favorite offer
	o accept offer auction
	o accept offer favorite offer
	o activity e-mail alerts
	o activity cell-phone alerts
	o user profile
	o user reviews
	o messaging
	X post previews
	o recommendations 


===============================================================================

			SETTING UP THE DEV ENVIRONMENT

===============================================================================

Necessary Software:

	-Microsoft Visual Studio
		Download: https://www.dropbox.com/sh/1h6f92tata24vts/AADcIsSl3tgqneG83Stg-Guia?dl=0
		Key: BWG7X-J98B3-W34RT-33B3R-JVYW9

	-SQL Server 2012 Express
		Download: https://www.dropbox.com/s/spjfh49bq421ljf/SQL%20Server%202012%20Express.exe?dl=0

	-SQL Server Management Studio 2012
		Download: https://www.dropbox.com/s/3ul3oiy5k5j6bkx/SQL%20Server%20Management%20Studio%202012.exe?dl=0



Connecting to Database: 

	Download and install SQL Server 2012 Express and SQL Server
	Management Studio

	Open up SQL Server Management Studio (ssms).

	Server name: qeqc5ragp7.database.windows.net,1433
	Authentication: SQL Server Authentication
	Login: owner
	Password: Quickflip411



Connecting to version control (via Github):

	Download and install Visual Studio

	Open up Visual Studio

	If you haven't entered the Product Key, do so now...
	(Help -> Register Product -> Enter a product key -> "BWG7X-J98B3-W34RT-33B3R-JVYW9")
	
	"Open from Source Control..." in the Start Page

	"Clone" under Local Git Repositories in the Team Explorer tab
	
	Enter "https://github.com/jamesmaila/QuickFlip.git" for the URL to clone

	Double click the newly appearing icon below when Clone finishes

	Click the "Install" link in the "Install 3rd-party Git command prompt tools" prompt

	Install -> Run the newly downloaded "msysgitVS.exe" file

	Install "Git for Windows"

	"Finish" -> "Exit"

	Exit and restart Visual Studio

	In Team Explorer, double click QuickFlip.sln to open

	From now on you can open the solution from the "Recent" list from the
	Start Page. Alternatively, you can find the source in "C:\Users\(UserName)\Source\Repos\QuickFlip"

	Change solution configuration from "Debug" to "Release"

	

Commiting to version control:

	Under "Team Explorer", select "Changes"

	Click the "Configure" link in the "Configure your user name and email address before commiting changes" prompt

	Enter Github User Name and Email Address -> "Update"

	Enter commit message

	Click "Sync" in the "Commit XYZ created locally. Sync to share your changes with the server" prompt -> Sync

	Enter Github credentials



Publishing to live site:

	Make sure solution configuration is on "Release"

	Press F5 to build and run (make sure the build is not broken!) -> Stop Debugging (Shift + F5)
	
	Highlight the QuickFlip project in the "Solution Explorer"

	"Build" -> "Publish QuickFlip"

	Go to "Profile" -> "Manage Profiles"

	Remove all profiles

	"Import" -> "Import from a published profile"

	Select  "C:\Users\(UserName)\Source\Repos\QuickFlip\Files\quickflip.azurewebsites.net.PublishSettings" -> "Okay"

	"Publish Method" should be set to "QuickFlip - Web Deploy*"

	Click "Publish" to finish



===============================================================================

				GENERAL NOTES

===============================================================================
	

	- If you are modifying the DB Schema, adjust the code in 
	  "Files/CreateQuickFlip.sql" to correspond with the changes.
	  The SQL database is hosted on Azure right now as a 30 day free trial.
	  After the 30 days, we can just open up another trial with a different email.
	  We don't want to have to recreate everything every 30 days, so 
	  keeping this create query up to date will let us reinstate the DB 
	  instantly. 

	- Always pull before you commit

	- Make sure to route all data access code through the Business Layer

	- Put all Enum declarations in "Enums.cs"


